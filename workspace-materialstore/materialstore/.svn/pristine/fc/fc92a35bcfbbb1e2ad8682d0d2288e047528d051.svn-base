/**  
 * @Title: GoodsController.java
 * @Package com.youzhicai.materialstore.web.controller
 * @Description: 物资
 * @author XieXianpeng
 * @date 2018年10月9日 下午4:40:44
 * @version V1.0  
 */
package com.youzhicai.materialstore.web.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.youzhicai.materialstore.api.GoodsAPI;
import com.youzhicai.materialstore.api.GoodsTypeAPI;
import com.youzhicai.materialstore.common.exception.BusinessException;
import com.youzhicai.materialstore.dto.GoodsApproveDTO;
import com.youzhicai.materialstore.dto.GoodsDTO;
import com.youzhicai.materialstore.dto.GoodsSupplyDTO;
import com.youzhicai.materialstore.dto.GoodsTypeDTO;
import com.youzhicai.materialstore.handler.Page;
import com.youzhicai.materialstore.vo.GoodsApproveVO;
import com.youzhicai.materialstore.vo.GoodsSearchVO;
import com.youzhicai.materialstore.vo.GoodsTypeVO;
import com.youzhicai.materialstore.vo.GoodsVO;
import com.youzhicai.materialstore.web.api.transfer.DataTransfer;
import com.youzhicai.materialstore.web.api.transfer.TransferType;
import com.youzhicai.materialstore.web.model.GoodsAddModel;
import com.youzhicai.materialstore.web.model.GoodsDeleteModel;
import com.youzhicai.materialstore.web.model.GoodsSearchModel;
import com.youzhicai.materialstore.web.model.GoodsTypeSubTypeModel;
import com.youzhicai.materialstore.web.util.ConfigUtil;
import com.youzhicai.materialstore.web.util.DESUtil;
import com.youzhicai.materialstore.web.util.Strings;

/**
 * @ClassName: GoodsController
 * @Description: 物资
 * @author XieXianpeng
 * @date 2018年10月9日 下午4:40:44
 */
@Controller
@RequestMapping("web/goods")
public class GoodsController {

    @Autowired
    private GoodsAPI goodsAPI;

    @Autowired
    private GoodsTypeAPI goodsTypeAPI;

    /**
     * @Title: nextGoodsCode
     * @Description: 获取最新物资编码
     * @param goodsTypeSubTypeModel
     * @return Object
     */
    @RequestMapping(value = "nextGoodsCode")
    @ResponseBody
    public Object nextGoodsCode(@RequestBody GoodsTypeSubTypeModel goodsTypeSubTypeModel) {
        GoodsDTO goodsDTO = new GoodsDTO();
        goodsDTO.setTid(goodsTypeSubTypeModel.getPid());
        goodsDTO.setCompanyId("123456");
        Map<String, Object> nextGoodsCode = goodsAPI.nextGoodsCode(goodsDTO);
        return nextGoodsCode;
    }

    /**
     * @Title: searchMaterialTable
     * @Description: 列表搜索栏
     * @param goodsSearchModel
     * @throws Exception
     * @return Object
     */
    @RequestMapping(value = "searchmaterialtable", method = RequestMethod.POST)
    @ResponseBody
    public Object searchMaterialTable(@RequestBody GoodsSearchModel goodsSearchModel) throws Exception {
        Map<String, Object> result = new HashMap<String, Object>();

        Integer used = goodsSearchModel.getUsed();
        Integer pageNum = goodsSearchModel.getPageNum();
        Integer pageSize = goodsSearchModel.getPageSize();
        String nameOrCode = goodsSearchModel.getNameOrCode();
        Long tid = goodsSearchModel.getTid();
        Integer approveStatus = goodsSearchModel.getApproveStatus();

        // 查询物资分页列表
        GoodsDTO goodsDTO = new GoodsDTO();
        goodsDTO.setUsed(used);
        goodsDTO.setPageNum(pageNum == null ? 1 : pageNum);
        goodsDTO.setPageSize(pageSize == null ? 10 : pageSize);
        goodsDTO.setNameOrCode(StringUtils.isEmpty(nameOrCode) ? null : nameOrCode);
        goodsDTO.setTid(tid);
        goodsDTO.setGoodsApprove(approveStatus == null ? null : new GoodsApproveDTO(approveStatus));

        goodsDTO.setCompanyId("123456");
        goodsDTO.setIsGidDes(true);
        Page<GoodsSearchVO> searchList = goodsAPI.findGoodsListForSearch(goodsDTO);

        if (searchList == null || searchList.getList() == null || searchList.getList().isEmpty()) {
            Integer pNum = goodsDTO.getPageNum();
            if (pNum > 1) {
                goodsDTO.setPageNum(pNum - 1);
                searchList = goodsAPI.findGoodsListForSearch(goodsDTO);
            }
        }

        result.put("searchList", searchList);

        // 查询启用物资及停用物资数量
        Map<String, Object> usedOrNotCount = goodsAPI.countForUsedOrNot(goodsDTO);
        result.put("usedOrNotCount", usedOrNotCount);

        return result;
    }

    /**
     * @Title: addMaterial
     * @Description: 新增物资
     * @param goodsAddModel
     * @return Object
     */
    @RequestMapping(value = "addmaterial", method = RequestMethod.POST)
    @ResponseBody
    public Object addMaterial(@RequestBody GoodsAddModel goodsAddModel) {
        // 物资信息
        GoodsDTO goodsDTO = new GoodsDTO();
        goodsDTO.setBrand(goodsAddModel.getBrand());
        goodsDTO.setCode(goodsAddModel.getCode());
        goodsDTO.setLink(goodsAddModel.getLink());
        goodsDTO.setName(goodsAddModel.getName());
        goodsDTO.setRemarks(goodsAddModel.getRemarks());
        goodsDTO.setSpecifications(goodsAddModel.getSpecifications());
        goodsDTO.setTid(goodsAddModel.getTid());
        goodsDTO.setUnit(goodsAddModel.getUnit());
        goodsDTO.setUsed(goodsAddModel.getUsed());

        // 扩展属性
        List<GoodsSupplyDTO> goodsSupplys = new ArrayList<GoodsSupplyDTO>();
        List<String> supplyNames;
        List<String> supplyValues;
        if ((supplyNames = goodsAddModel.getSupplyNames()) != null && !supplyNames.isEmpty()
                && (supplyValues = goodsAddModel.getSupplyValues()) != null && !supplyValues.isEmpty()) {
            if (supplyNames.size() == supplyValues.size()) {
                for (int i = 0; i < supplyNames.size(); i++) {
                    goodsSupplys.add(new GoodsSupplyDTO(1, supplyNames.get(i), supplyValues.get(i)));
                }
                goodsDTO.setGoodsSupplys(goodsSupplys);
            } else {
                // 异常
            }
        }

        // 图片
        List<String> imgNames;
        List<String> imgValues;
        if ((imgNames = goodsAddModel.getImgNames()) != null && !imgNames.isEmpty() && (imgValues = goodsAddModel.getImgValues()) != null
                && !imgValues.isEmpty()) {
            for (int i = 0; i < imgNames.size(); i++) {
                goodsSupplys.add(new GoodsSupplyDTO(2, imgNames.get(i), imgValues.get(i)));
            }
        }

        // 审核信息
        GoodsApproveDTO goodsApproveDTO = new GoodsApproveDTO();
        goodsApproveDTO.setApproveStatus(goodsAddModel.getApproveStatus());
        goodsDTO.setGoodsApprove(goodsApproveDTO);

        goodsDTO.setCompanyId("123456");
        goodsDTO.setCompanyName("铜化测试");

        Map<String, Object> result = new HashMap<String, Object>();
        boolean addGoods = false;
        Integer errCode = 1000;
        String errMsg = "";

        Long newGoodsIdParam;
        if ((newGoodsIdParam = goodsAddModel.getNewGoodsId()) != null && newGoodsIdParam > 0) {
            // 修改操作
            goodsDTO.setNewGoodsId(newGoodsIdParam);
            try {
                addGoods = goodsAPI.modifyGoods(goodsDTO);
                if (addGoods) {
                    result.put("newGid", DESUtil.encryptStr(String.valueOf(newGoodsIdParam)));
                }
            } catch (Exception e) {
                if (e instanceof BusinessException) {
                    errCode = ((BusinessException) e).getCode();
                    errMsg = ((BusinessException) e).getMsg();
                    System.out.println("code:" + errCode + "  " + "msg:" + ((BusinessException) e).getMsg());
                } else {
                    errCode = TransferType.ERROR.getCode();
                    errMsg = TransferType.ERROR.getMsg();
                }
                e.printStackTrace();
            }
        } else {
            // 新增
            long newGoodsId = 0L;
            try {
                newGoodsId = goodsAPI.addGoods(goodsDTO);
            } catch (Exception e) {
                if (e instanceof BusinessException) {
                    errCode = ((BusinessException) e).getCode();
                    errMsg = ((BusinessException) e).getMsg();
                    System.out.println("code:" + errCode + "  " + "msg:" + ((BusinessException) e).getMsg());
                } else {
                    errCode = TransferType.ERROR.getCode();
                    errMsg = TransferType.ERROR.getMsg();
                }
                e.printStackTrace();
            }
            if (newGoodsId > 0L) {
                addGoods = true;
                result.put("newGoodsId", newGoodsId);
            }
        }

        System.out.println(JSON.toJSON(goodsAddModel));

        result.put("addStatus", addGoods);
        result.put("errCode", errCode);
        result.put("errMsg", errMsg);

        return result;
    }

    /**
     * @Title: deleteMaterial
     * @Description: 删除物资
     * @param goodsDeleteModel
     * @return Object
     */
    @RequestMapping("deletematerial")
    @ResponseBody
    public Object deleteMaterial(@RequestBody GoodsDeleteModel goodsDeleteModel) {
        Long id = null;
        try {
            id = Strings.str2Long(DESUtil.decryptStr(goodsDeleteModel.getGid()));
        } catch (Exception e) {
        }
        if (id == null) {
            return new DataTransfer<>(TransferType.ERROR.getCode(), TransferType.ERROR.getMsg());
        }

        // 查询详情
        GoodsDTO queryGoodsDTO = new GoodsDTO();
        queryGoodsDTO.setId(id);
        queryGoodsDTO.setCompanyId("123456");
        GoodsVO goodsVO = goodsAPI.findGoodsDetail(queryGoodsDTO);
        // 审核状态物资跳转至查看页
        GoodsApproveVO goodsApprove;
        Integer approveStatus;
        if (goodsVO == null || (goodsApprove = goodsVO.getGoodsApprove()) == null || (approveStatus = goodsApprove.getApproveStatus()) == null
                || approveStatus == 21) {
            return new DataTransfer<>(TransferType.ERROR.getCode(), TransferType.ERROR.getMsg());
        }

        GoodsDTO goodsDTO = new GoodsDTO();
        goodsDTO.setId(id);
        goodsDTO.setCompanyId("123456");
        goodsDTO.setUpdateId(null);
        goodsDTO.setUpdator(null);
        if (goodsAPI.deleteGoods(goodsDTO)) {
            return new DataTransfer<>(TransferType.SUCCESS.getCode(), TransferType.SUCCESS.getMsg());
        }

        return new DataTransfer<>(TransferType.ERROR.getCode(), TransferType.ERROR.getMsg());
    }

    /**
     * @Title: materialTable
     * @Description: 物资列表页
     * @param model
     * @throws Exception
     * @return String
     */
    @RequestMapping("materialtable")
    public String materialTable(Model model) throws Exception {
        // 查询物资分页列表
        GoodsDTO goodsDTO = new GoodsDTO();
        goodsDTO.setPageNum(1);
        goodsDTO.setPageSize(10);
        goodsDTO.setCompanyId("123456");
        goodsDTO.setIsGidDes(true);
        goodsDTO.setUsed(1);
        Page<GoodsSearchVO> searchList = goodsAPI.findGoodsListForSearch(goodsDTO);
        model.addAttribute("searchList", searchList);

        // 查询启用物资及停用物资数量
        Map<String, Object> usedOrNotCount = goodsAPI.countForUsedOrNot(goodsDTO);
        model.addAttribute("usedOrNotCount", usedOrNotCount);

        // 物资状态列表
        model.addAttribute("approveStatusList", goodsAPI.goodsApproveStatusList());

        // 一级分类
        GoodsTypeDTO firstGoodsTypeDTO = new GoodsTypeDTO();
        firstGoodsTypeDTO.setCompanyId("123456");
        firstGoodsTypeDTO.setPid(0L);
        List<GoodsTypeVO> firstRankTypes = goodsTypeAPI.subtypeList(firstGoodsTypeDTO);
        model.addAttribute("firstRankTypes", firstRankTypes);

        return "materialGoods/materialTable";
    }

    /**
     * @Title: toAddMaterial
     * @Description: 新增物资页
     * @param model
     * @return String
     */
    @RequestMapping("toaddmaterial")
    public String toAddMaterial(Model model) {
        // 一级菜单
        GoodsTypeDTO firstGoodsTypeDTO = new GoodsTypeDTO();
        firstGoodsTypeDTO.setCompanyId("123456");
        firstGoodsTypeDTO.setPid(0L);
        List<GoodsTypeVO> firstRankTypes = goodsTypeAPI.subtypeList(firstGoodsTypeDTO);
        model.addAttribute("firstRankTypes", firstRankTypes);

        return "materialGoods/materialAdd";
    }

    /**
     * @Title: viewMaterial
     * @Description: 查看物资页
     * @param model
     * @param gid
     * @return String
     */
    @RequestMapping("viewmaterial")
    public String viewMaterial(Model model, String gid) {
        Long id = null;
        try {
            id = Strings.str2Long(DESUtil.decryptStr(gid));
        } catch (Exception e) {
        }

        // 查询详情
        GoodsDTO goodsDTO = new GoodsDTO();
        goodsDTO.setId(id);
        goodsDTO.setCompanyId("123456");
        GoodsVO goodsVO = goodsAPI.findGoodsDetail(goodsDTO);

        System.out.println(JSON.toJSON(goodsVO));
        if (goodsVO == null) {
            goodsVO = new GoodsVO();
            goodsVO.setGoodsSupplys(new ArrayList<>());
            goodsVO.setGoodsApprove(new GoodsApproveVO());
        }

        model.addAttribute("goodsVO", goodsVO);
        model.addAttribute("showImageUrl", ConfigUtil.getValue("fileServiceURL") + "/image/showImage.yzc?attId=");

        return "materialGoods/materialView";
    }

    /**
     * @Title: toModify
     * @Description: 修改物资页
     * @param model
     * @param gid
     * @return String
     */
    @RequestMapping("tomodify")
    public String toModify(Model model, String gid) {
        Long id = null;
        try {
            id = Strings.str2Long(DESUtil.decryptStr(gid));
        } catch (Exception e) {
        }

        // 查询详情
        GoodsDTO goodsDTO = new GoodsDTO();
        goodsDTO.setId(id);
        goodsDTO.setCompanyId("123456");
        GoodsVO goodsVO = goodsAPI.findGoodsDetail(goodsDTO);
        // 审核状态物资跳转至查看页
        GoodsApproveVO goodsApprove;
        Integer approveStatus;
        if (goodsVO == null || (goodsApprove = goodsVO.getGoodsApprove()) == null || (approveStatus = goodsApprove.getApproveStatus()) == null
                || approveStatus == 21) {
            return "redirect:/web/goods/viewmaterial?gid=" + gid;
        }

        model.addAttribute("goodsVO", goodsVO);
        model.addAttribute("showImageUrl", ConfigUtil.getValue("fileServiceURL") + "/image/showImage.yzc?attId=");

        // 一级分类
        GoodsTypeDTO firstGoodsTypeDTO = new GoodsTypeDTO();
        firstGoodsTypeDTO.setCompanyId("123456");
        firstGoodsTypeDTO.setPid(0L);
        List<GoodsTypeVO> firstRankTypes = goodsTypeAPI.subtypeList(firstGoodsTypeDTO);
        model.addAttribute("firstRankTypes", firstRankTypes);

//        Map<String, Object> allRank = goodsVO.getAllRank();
//        // 二级分类
//        GoodsTypeDTO secondGoodsTypeDTO = new GoodsTypeDTO();
//        secondGoodsTypeDTO.setCompanyId("123456");
//        secondGoodsTypeDTO.setPid((Long) allRank.get("firstRankId"));
//        List<GoodsTypeVO> secondRankTypes = goodsTypeAPI.subtypeList(secondGoodsTypeDTO);
//        model.addAttribute("secondRankTypes", secondRankTypes);
//        // 三级分类
//        GoodsTypeDTO thirdGoodsTypeDTO = new GoodsTypeDTO();
//        thirdGoodsTypeDTO.setCompanyId("123456");
//        thirdGoodsTypeDTO.setPid((Long) allRank.get("secondRankId"));
//        List<GoodsTypeVO> thirdRankTypes = goodsTypeAPI.subtypeList(thirdGoodsTypeDTO);
//        model.addAttribute("thirdRankTypes", thirdRankTypes);

        return "materialGoods/materialModify";
    }

}
